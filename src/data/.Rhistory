sigma <-matrix(c(1,b,b,s_2+b),2,2)
mu<-matrix(c(0,0),2,1)
ns <- c(200,500,1000)
num_iters <- 100
sim_1<-function(sigma,mu,n,b,s_2,num_iters){
b_hats_2 <- c()
for (i in seq(num_iters)) {
Z <- mvrnorm(n,mu,sigma)
delta_i = abs(Z[,1])<=2
Z_obs <- Z[delta_i,]
b_hats_2<-append(b_hats_2,sum(Z_obs[,1]*Z_obs[,2])/sum(Z_obs[,1]^2))
}
return(b_hats_2)
}
for (n in ns){
estimates<-sim_1(sigma,mu,n,b,s_2,num_iters)
print(mean(estimates))
print(sd(estimates))
print("===============")
}
sim_2<-function(sigma,mu,n,b,s_2,num_iters){
b_hats_2 <- c()
for (i in seq(num_iters)) {
Z <- mvrnorm(n,mu,sigma)
delta_i = abs(Z[,2])<=2
Z_obs <- Z[delta_i,]
b_hats_2<-append(b_hats_2,sum(Z_obs[,1]*Z_obs[,2])/sum(Z_obs[,1]^2))
}
return(b_hats_2)
}
for (n in ns){
estimates<-sim_2(sigma,mu,n,b,s_2,num_iters)
print(mean(estimates))
print(sd(estimates))
print("===============")
}
rBernoulli <- function(p){
vapply(p, function(x) rbinom(1, 1, x), as.integer(1L))
}
rBernoulli(c(0.5,1,0.4,0.1))
sim_3<-function(sigma,mu,n,b,s_2,num_iters,gamma_0,gamma_1){
b_hats_2 <- c()
for (i in seq(num_iters)) {
Z <- mvrnorm(n,mu,sigma)
affine = gamma_0+gamma_1*Z[,1]
p = 1/(1+exp(affine))
R_i = as.logical(rBernoulli(p))
Z_obs <- Z[R_i,]
b_hats_2<-append(b_hats_2,sum(Z_obs[,1]*Z_obs[,2])/sum(Z_obs[,1]^2))
}
return(b_hats_2)
}
for (n in ns){
estimates<-sim_3(sigma,mu,n,b,s_2,num_iters,gamma_0=2,gamma_1=4)
print(mean(estimates))
print(sd(estimates))
print("===============")
}
rBernoulli <- function(p){
vapply(p, function(x) rbinom(1, 1, x), as.integer(1L))
}
sim_3<-function(sigma,mu,n,b,s_2,num_iters,gamma_0,gamma_1){
b_hats_2 <- c()
for (i in seq(num_iters)) {
Z <- mvrnorm(n,mu,sigma)
affine = gamma_0+gamma_1*Z[,1]
p = 1/(1+exp(affine))
R_i = as.logical(rBernoulli(p))
Z_obs <- Z[R_i,]
b_hats_2<-append(b_hats_2,sum(Z_obs[,1]*Z_obs[,2])/sum(Z_obs[,1]^2))
}
return(b_hats_2)
}
for (n in ns){
estimates<-sim_3(sigma,mu,n,b,s_2,num_iters,gamma_0=2,gamma_1=4)
print(mean(estimates))
print(sd(estimates))
print("===============")
}
df <- read.csv('../data/raw/hmda_2017_ri_selected.csv')
head(df)
library(DataExplorer)
df <- read.csv('../data/raw/hmda_2017_ri_selected.csv')
create_report(df)
summary(df)
library(DataExplorer)
library(dplyr)
df <- read.csv('../data/raw/hmda_2017_ri_selected.csv')
library(DataExplorer)
library(dplyr)
library(tidyverse)
df <- read.csv('../data/raw/hmda_2017_ri_selected.csv')
pivot_longer(df,cols = c('white','afam','asian','native','hispanic','nothispanic'),names_to = 'race')
pivot_longer(!df[,c('tot_loan_amount','white','afam','asian','native','hispanic','nothispanic')],names_to = 'race')
df[,c('tot_loan_amount','white','afam','asian','native','hispanic','nothispanic')] %>% pivot_longer(!tot_loan_amount,names_to = 'race')
list.files(path = '../data/raw/',pattern = 'hmda_*')
df1<-read.csv(hmda_files[1])
hmda_files <- list.files(path = '../data/raw/',pattern = 'hmda_*')
df1<-read.csv(hmda_files[1])
hmda_files
hmda_files <- list.files(path = '../data/raw/',pattern = 'hmda_*',full.names = TRUE)
hmda_files
df1<-read.csv(hmda_files[1])
names(df1)
names(df1[1,])
names(df1[2,])
names(df1[3,])
names(df1[,3])
names(df1[1:])
names(df1[1])
names(df1[2,])
names(df1[2,5])
names(df1)[2,]
names(df1)[1]
names(df1)[-1]
names(df1)[-1]+'samir'
paste(names(df1)[-1],'samir')
paste(names(df1)[-1],'_samir')
paste(names(df1)[-1],'samir',sep='_')
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')[1]
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')[1]
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')[2]
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')[1]
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')[1][1]
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')[1][1]
strsplit("../data/raw//hmda_2008_ri_selected.csv",'_')[[1]]
unlist(strsplit("../data/raw//hmda_2008_ri_selected.csv",'_'))
unlist(strsplit("../data/raw//hmda_2008_ri_selected.csv",'_'))[2]
df1<-read.csv(hmda_files[1])
year <- unlist(strsplit(hmda_files[1],'_'))[2]
cols <- names(df1)
df1
df2<-read.csv(hmda_files[2])
paste(cols,[-1],'samir',sep='_')
paste(cols[-1],'samir',sep='_')
c(cols[1],paste(cols[-1],'samir',sep='_'))
df1<-read.csv(hmda_files[1])
year <- unlist(strsplit(hmda_files[1],'_'))[2]
cols <- names(df1)
df1(names) <- c(cols[1],paste(cols[-1], year, sep='_'))
df1<-read.csv(hmda_files[1])
year <- unlist(strsplit(hmda_files[1],'_'))[2]
cols <- names(df1)
names(df1) <- c(cols[1],paste(cols[-1], year, sep='_'))
df2<-read.csv(hmda_files[2])
year <- unlist(strsplit(hmda_files[2],'_'))[2]
cols <- names(df2)
names(df2) <- c(cols[1],paste(cols[-1], year, sep='_'))
df1
merge(df1,df2,by='unigeoid)
merge(df1,df2,by='unigeoid')
merge(df1,df2,by='unigeoid',all=TRUE)
merge(df1,df2,by='unigeoid',all=TRUE)
merge(df1,df2,by='unigeoid',all=TRUE)
merge(df1,df2,by='unigeoid',all=TRUE)
merge(df1,df2,by='unigeoid',all=TRUE)
merge(data.frame(),df2,by='unigeoid',all=TRUE)
#merge(data.frame(),df2,by='unigeoid',all=TRUE)
Reduce(function(x, y) merge(x, y, all=TRUE), list(df1, df2))
dfs <- c()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,df)
}
hmda_files <- list.files(path = '../data/raw/',pattern = 'hmda_*',full.names = TRUE)
dfs <- c()
for (f in hmda_files){
print(f)
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,df)
}
dfs <- c()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,df)
}
dfs
dfs[1]
dfs <- c()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,c(df))
}
dfs[1]
dfs[2]
dfs <- list()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,list(df))
}
dfs[2]
dfs[1]
dfs[3]
#merge(data.frame(),df2,by='unigeoid',all=TRUE)
Reduce(function(x, y) merge(x, y, all=TRUE,by='unigeoid'), dfs)
hmda_files <- list.files(path = '../data/raw/',pattern = 'hmda_*',full.names = TRUE)
dfs <- list()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,list(df))
}
all_years_df <- Reduce(function(x, y) merge(x, y, all=TRUE,by='unigeoid'), dfs)
dims(all_years_df)
dim(all_years_df)
dim(df)
hmda_files
read.csv(hmda_files[1])
dim(read.csv(hmda_files[1]))
dim(read.csv(hmda_files[2]))
dim(read.csv(hmda_files[3]))
length(hmda_files)
(40-1)*length(hmda_files)+1
dim(hmda_files[1])
dim(hmda_files[2])
dim(read.csv(hmda_files[3]))
dim(read.csv(hmda_files[5]))
dim(read.csv(hmda_files[6]))
hmda_files <- list.files(path = '../data/raw/',pattern = 'hmda_*',full.names = TRUE)
dfs <- list()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,list(df))
}
all_years_df <- Reduce(function(x, y) merge(x, y, all=TRUE,by='unigeoid'), dfs)
write.csv(all_years_df,'../data/raw/mortgages_all_years.df')
write.csv(all_years_df,'../data/processed/mortgages_all_years.df')
write.csv(all_years_df,'../data/processed/mortgages_all_years.csv')
hmda_files <- list.files(path = '../data/raw/',pattern = 'hmda_*',full.names = TRUE)
dfs <- list()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,list(df))
}
all_years_df <- Reduce(function(x, y) merge(x, y, all=TRUE,by='unigeoid'), dfs)
rename(all_years_df,FIPS=unigeoid)
all_years_df
hmda_files <- list.files(path = '../data/raw/',pattern = 'hmda_*',full.names = TRUE)
dfs <- list()
for (f in hmda_files){
df<-read.csv(f)
year <- unlist(strsplit(f,'_'))[2]
cols <- names(df)
names(df) <- c(cols[1],paste(cols[-1], year, sep='_'))
dfs<-append(dfs,list(df))
}
all_years_df <- Reduce(function(x, y) merge(x, y, all=TRUE,by='unigeoid'), dfs)
all_years_df <- rename(all_years_df,FIPS=unigeoid)
write.csv(all_years_df,'../data/processed/mortgages_all_years.csv',row.names = FALSE)
is.na(all_years_df)
is.na(all_years_df$tot_loan_amount_2008)
setwd("Google_Drive/Masters/capstone/capstone/src/data/")
library(stringr)
library(hash)
library(dplyr)
library(tidyverse)
library(data.table)
### Functions ###
read_data <- function(input_file_path,relevant_cols,year = 2016,nrows=Inf){
df <- fread(input_file_path,
colClasses = c('FIPS'='character'),
data.table = FALSE,
nrows = nrows)
relevant_cols_filtered <- c()
for (col in relevant_cols) {
col_year = paste(col,year,sep='_')
if ( col_year %in% names(df)) {
relevant_cols_filtered <- append(relevant_cols_filtered,col_year)
}
else {
relevant_cols_filtered <- append(relevant_cols_filtered,col)
}
}
relevant_cols_cleaned <- str_replace(relevant_cols_filtered,paste('_',year,sep=''),'')
df <- df[,relevant_cols_filtered]
names(df) <- relevant_cols_cleaned
return(df)
}
train_test_split <-function(df, train_proportion = 0.8, seed = 123){
train_size <- floor(train_proportion*nrow(df))
## set the seed to make your partition reproducible
set.seed(seed)
train_ind <- sample(seq_len(nrow(df)), size = train_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
return(list(train = train,test = test))
}
### Script ###
#Parameters
input_file_path <- '../../data/processed/sepher2.0_cleaned.csv'
output_folder_path <- '../../data/processed/sepher_model_data'
relevant_cols <- c('FIPS',
'EP_UNEMP',
'EP_PCI',
'EP_POV',
'EP_NOVEH',
'EP_NOHSDP',
'EP_MOBILE',
'EP_MINRTY',
'EP_CROWD',
'EP_AGE65',
'EP_AGE17',
'AFAM',
'WHITE',
'HISPANIC',
'WFIR_EALT',
'HRCN_EALT',
'CFLD_EALT',
'RFLD_EALT',
'HWAV_EALT',
'EVICTIONS')
year = 2016
train_proportion = 0.8
#Execution
df <- read_data(input_file_path,relevant_cols,year = year)
split = train_test_split(df,train_proportion = train_proportion)
dir.create(file.path(output_folder_path))
write.csv(split$train,file.path(output_folder_path,'train.csv'),row.names = FALSE)
write.csv(split$test,file.path(output_folder_path,'test.csv'),row.names = FALSE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(corrplot)
library(mi)
train = read.csv('../data/processed/sepher_model_data/train.csv')
colMeans(is.na(train))*100
install.packages("extracat")
library(extracat)
visna(train)
col<- colorRampPalette(c("blue","white","red"))(200)
corrplot(cormat,
method="color",
type='upper',
order = 'hclust',
tl.col = 'black',
diag=FALSE,
addCoef.col = "black",
addgrid.col = 'white',
tl.cex = 0.4,
number.cex=0.3,
cl.cex = 0.4,
cl.ratio = 0.1
)
cormat <- cor(train,use = "complete.obs")
col<- colorRampPalette(c("blue","white","red"))(200)
corrplot(cormat,
method="color",
type='upper',
order = 'hclust',
tl.col = 'black',
diag=FALSE,
addCoef.col = "black",
addgrid.col = 'white',
tl.cex = 0.4,
number.cex=0.3,
cl.cex = 0.4,
cl.ratio = 0.1
)
cormat <- cor(train[,-c('FIPS')],use = "complete.obs")
train[,-c('FIPS')]
train[,c('FIPS')]
train[,c(-'FIPS')]
train[,-c('FIPS')]
train[,~c('FIPS')]
train[,-c(1)]
train[,c(1)]
train
train[,-c(1)]
cormat <- cor(train[,-c(1)],use = "complete.obs")
col<- colorRampPalette(c("blue","white","red"))(200)
corrplot(cormat,
method="color",
type='upper',
order = 'hclust',
tl.col = 'black',
diag=FALSE,
addCoef.col = "black",
addgrid.col = 'white',
tl.cex = 0.4,
number.cex=0.3,
cl.cex = 0.4,
cl.ratio = 0.1
)
cormat <- cor(train[,-c(1)],use = "complete.obs")
col<- colorRampPalette(c("blue","white","red"))(200)
corrplot(cormat,
method="color",
type='upper',
order = 'hclust',
tl.col = 'black',
diag=TRUE,
addCoef.col = "black",
addgrid.col = 'white',
tl.cex = 0.4,
number.cex=0.3,
cl.cex = 0.4,
cl.ratio = 0.1
)
cormat <- cor(train[,-c(1)],use = "complete.obs")
col<- colorRampPalette(c("blue","white","red"))(200)
corrplot(cormat,
method="color",
#type='upper',
order = 'hclust',
tl.col = 'black',
diag=FALSE,
addCoef.col = "black",
addgrid.col = 'white',
tl.cex = 0.4,
number.cex=0.3,
cl.cex = 0.4,
cl.ratio = 0.1
)
cormat <- cor(train[,-c(1)],use = "complete.obs")
col<- colorRampPalette(c("blue","white","red"))(200)
corrplot(cormat,
method="color",
#type='upper',
order = 'hclust',
tl.col = 'black',
#diag=FALSE,
addCoef.col = "black",
addgrid.col = 'white',
tl.cex = 0.4,
number.cex=0.3,
cl.cex = 0.4,
cl.ratio = 0.1
)
hist(train$EVICTIONS)
hist(train$EVICTIONS,breaks=30)
plot(train[,-1])
splomvar <- train %>% select(EP_AGE17,EP_AGE65,EP_UNEMP,EP_NOVEH,EP_NOHSDP,EP_CROWD,E_PCI,EVICTIONS)
splomvar <- train %>% select(EP_AGE17,EP_AGE65,EP_UNEMP,EP_NOVEH,EP_NOHSDP,EP_CROWD,EP_PCI,EVICTIONS)
plot(train[,-1])
splomvar <- train %>% select(EP_AGE17,EP_AGE65,EP_UNEMP,EP_NOVEH,EP_NOHSDP,EP_CROWD,EP_PCI,EVICTIONS)
plot(splomvar)
splomvar
train %>% ggplot(aes(x = 'EP_MINRTY',y='EVICTIONS'))
train %>% ggplot(aes(x = 'EP_MINRTY',y='EVICTIONS')) + geom_point()
ggplot(train,aes(x = 'EP_MINRTY',y='EVICTIONS')) + geom_point()
train %>% ggplot(aes(x = EP_MINRTY,y=EVICTIONS)) + geom_point()
train %>% ggplot(aes(x = EP_MINRTY,y=EVICTIONS)) +
geom_point() +
geom_density2d()
train %>% ggplot(aes(x = EP_MINRTY,y=EVICTIONS)) +
geom_point()
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI)) +
geom_point()
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,color =EVICTIONS)) +
geom_point()
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + geom_raster()
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + geom_rectr()
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + geom_rect()
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + geom_tile()
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI)) + geom_tile(aes(fill =EVICTIONS))
train[1000:1100,]
replace_na(train$EVICTIONS,0)
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + geom_tile()
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + geom_tile() +scale_fill_gradient(low = "white", high = "red")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + geom_tile() +scale_fill_gradient(low = "blue", high = "red")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,fill =EVICTIONS)) + stat_summary_2d() +scale_fill_gradient(low = "blue", high = "red")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train[1000:1100,] %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d() +scale_fill_gradient(low = "blue", high = "red")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d() +scale_fill_gradient(low = "blue", high = "red")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d() +scale_fill_gradient2(low = "grey",high = "black")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 20) +scale_fill_gradient2(low = "grey",high = "black")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 10) +scale_fill_gradient2(low = "grey",high = "black")
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 10) +scale_fill_gradient2(low = "grey",high = "black",name = '# Evictions')
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 10) +scale_fill_gradient2(palette = 'Reds',name = '# Evictions')
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 10) +continuous_scale(palette = 'Reds',name = '# Evictions')
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 10) +scale_color_brewer(palette = 'Reds',name = '# Evictions')
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 10) +scale_color_brewer(palette = 'Greens',name = '# Evictions')
train$EVICTIONS <- replace_na(train$EVICTIONS,0)
train %>% ggplot(aes(x = EP_MINRTY,y=EP_PCI,z =EVICTIONS)) + stat_summary_2d(bins = 10) +scale_fill_gradient2(low = "grey",high = "black",name = '# Evictions')
hist(train$EVICTIONS,breaks=30)
