#setwd("Google_Drive/Masters/capstone/capstone/src/data/")
library(stringr)
library(hash)
library(dplyr)
library(tidyverse)
library(data.table)

### Functions ###

read_data <- function(input_file_path,relevant_cols,year = 2016,nrows=Inf){
  
  df <- fread(input_file_path,
              colClasses = c('FIPS'='character'),
              data.table = FALSE,
              nrows = nrows)
    
  relevant_cols_filtered <- c()
  for (col in relevant_cols) {
    col_year = paste(col,year,sep='_')
    if ( col_year %in% names(df)) {
      relevant_cols_filtered <- append(relevant_cols_filtered,col_year)
    }
    else {
      relevant_cols_filtered <- append(relevant_cols_filtered,col)
    }
  }
  
  relevant_cols_cleaned <- str_replace(relevant_cols_filtered,paste('_',year,sep=''),'')
  df <- df[,relevant_cols_filtered]
  names(df) <- relevant_cols_cleaned
return(df)
}

train_test_split <-function(df, train_proportion = 0.8, seed = 123){
  
  train_size <- floor(train_proportion*nrow(df))
  
  ## set the seed to make your partition reproducible
  set.seed(seed)
  train_ind <- sample(seq_len(nrow(df)), size = train_size)
  
  train <- df[train_ind, ]
  test <- df[-train_ind, ]
  return(list(train = train,test = test))
}



### Script ###

#Parameters
input_file_path <- '/Users/tomislav_galjanic/Documents/Tomislav/Columbia/Courses/Fall 2021/ENGI E4800/Tedesco/SEPHER 2.0/sepher2.0_cleaned.csv'
output_folder_path <- '/Users/tomislav_galjanic/Documents/Tomislav/Columbia/Courses/Fall 2021/ENGI E4800/Tedesco/SEPHER 2.0/Model Files'
relevant_cols <- c('FIPS',
                   'EP_UNEMP',
                   'STATE',
                   'EP_PCI',
                   'EP_POV',
                   'EP_NOVEH',
                   'EP_NOHSDP',
                   'EP_MOBILE',
                   'EP_MINRTY',
                   'EP_CROWD',
                   'EP_AGE65',
                   'EP_AGE17',
                   'AFAM',
                   'WHITE',
                   'HISPANIC',
                   'WFIR_EALT',
                   'HRCN_EALT',
                   'CFLD_EALT',
                   'RFLD_EALT',
                   'HWAV_EALT',
                   'EVICTIONS')
year = 2016
train_proportion = 0.8

#Execution
df <- read_data(input_file_path,relevant_cols,year = year)
split = train_test_split(df,train_proportion = train_proportion)


dir.create(file.path(output_folder_path))
write.csv(split$train,file.path(output_folder_path,'train.csv'),row.names = FALSE)
write.csv(split$test,file.path(output_folder_path,'test.csv'),row.names = FALSE)

